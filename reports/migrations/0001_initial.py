# Generated by Django 3.2.13 on 2022-06-15 12:31

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import permits.fields
import reports.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("auth", "0012_alter_user_first_name_max_length"),
        ("permits", "0073_filter_documenttype_for_integrator"),
    ]

    operations = [
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                (
                    "integrator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="auth.group",
                        verbose_name="Groupe des administrateurs",
                    ),
                ),
            ],
            options={
                "verbose_name": "5.2 Configuration du rapport",
                "verbose_name_plural": "5.2 Configuration des rapports",
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_reports.section_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=reports.models.NON_POLYMORPHIC_CASCADE,
                        related_name="sections",
                        to="reports.report",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="SectionAuthor",
            fields=[
                (
                    "section_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reports.section",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("reports.section",),
        ),
        migrations.CreateModel(
            name="SectionMap",
            fields=[
                (
                    "section_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reports.section",
                    ),
                ),
                (
                    "qgis_project_file",
                    permits.fields.AdministrativeEntityFileField(
                        storage=permits.fields.PrivateFileSystemStorage(),
                        upload_to="qgis_templates",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["qgs"]
                            )
                        ],
                        verbose_name="Projet QGIS '*.qgs'",
                    ),
                ),
                ("qgis_print_template_name", models.CharField(max_length=30)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("reports.section",),
        ),
        migrations.CreateModel(
            name="SectionParagraph",
            fields=[
                (
                    "section_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reports.section",
                    ),
                ),
                ("title", models.CharField(blank=True, default="", max_length=2000)),
                (
                    "content",
                    ckeditor.fields.RichTextField(
                        help_text='Il est possible d\'inclure des variables et de la logique avec la <a href="https://jinja.palletsprojects.com/en/3.1.x/templates/">syntaxe Jinja</a>. Vous pouvez afficher les variables diponibles avec la balise `{{data}}`'
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("reports.section",),
        ),
        migrations.CreateModel(
            name="ReportLayout",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("width", models.PositiveIntegerField(default=210)),
                ("height", models.PositiveIntegerField(default=297)),
                ("margin_top", models.PositiveIntegerField(default=10)),
                ("margin_right", models.PositiveIntegerField(default=10)),
                ("margin_bottom", models.PositiveIntegerField(default=10)),
                ("margin_left", models.PositiveIntegerField(default=10)),
                (
                    "font",
                    models.CharField(
                        blank=True,
                        help_text='La liste des polices disponbiles est visible sur <a href="https://fonts.google.com/" target="_blank">Goole Fonts</a>',
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "background",
                    models.ImageField(
                        blank=True,
                        help_text='Image d\'arrière plan ("papier à en-tête")',
                        null=True,
                        upload_to="",
                    ),
                ),
                (
                    "integrator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="auth.group",
                        verbose_name="Groupe des administrateurs",
                    ),
                ),
            ],
            options={
                "verbose_name": "5.1 Configuration du modèle d'impression de rapport",
                "verbose_name_plural": "5.1 Configuration des modèles d'impression de rapport",
            },
        ),
        migrations.AddField(
            model_name="report",
            name="layout",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="reports.reportlayout"
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                to="permits.complementarydocumenttype",
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="work_object_types",
            field=models.ManyToManyField(
                blank=True,
                related_name="_reports_report_work_object_types_+",
                to="permits.WorksObjectType",
            ),
        ),
    ]
